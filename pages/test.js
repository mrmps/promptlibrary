import Head from 'next/head'
import Image from 'next/image'
import styles from '../app/page.module.css';
import {useState, useEffect} from 'react'
import * as debounce from 'lodash.debounce';


const CONSOLES = ["gb","gba","gbc","gg","md","ms","n64","nes","pce","ps1","sat","sega32","snes","vb"];
const GENRES = ["Adventure","Arcade","Card & Board Game","Fighting","Hack and slash/Beat 'em up","Indie","Music","Pinball","Platform","Point-and-click","Puzzle","Quiz/Trivia","Racing","Real Time Strategy (RTS)","Role-playing (RPG)","Shooter","Simulator","Sport","Strategy","Tactical","Turn-based strategy (TBS)","Visual Novel"];

const searchGames = async (term, consoles, callback) => {
  let url = `http://localhost:3000/api/search?term=${term}`;
  if (consoles && consoles.length) url += CONSOLES.filter((c,i) => consoles[i]).map(c => `&console=${c}`).join("");
  const response = await fetch(url);
  console.log(response);
  return callback(await response.json());
}

const debouncedSearch = debounce(searchGames, 500);

function Checkboxes({ title, onChange, options }) {
  return (
    <label
      style={{
        margin: "1em",
        display: "flex",
        justifyContent: "center",
        gap: ".5em"
      }}
    >
      {title}
      <form style={{ display: "flex" }}>
        {options.map((value, i) => (
          <div key={value}>
            <input
              type="checkbox"
              id={value}
              name="checkbox"
              value={value}
              // defaultChecked
              onChange={() => onChange(i)}
            />
            <label htmlFor={value}>{value}</label>
          </div>
        ))}
      </form>
    </label>
  );
}



export default function Home() {
  const [searched, setSearched] = useState("batman");
  const [consoles, setConsoles] = useState(CONSOLES.map(c => false));
  const [games, setGames] = useState([]);

  useEffect(() => {
    if (searched) {
      debouncedSearch(searched, consoles, 
        results => {
            setGames(results.map(r => r.record))
        });
    }
  }, [searched, consoles]);

  function toggleConsole(i) {
    setConsoles(consoles.map((v, ci) => ci === i ? !v : v));
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Find retro games!
        </h1>

        <div className={styles.container} >
          <input type="search" value={searched} onChange={(e) => setSearched(e.target.value)} />

          <Checkboxes title="Filter by console" options={CONSOLES} onChange={toggleConsole} />
        </div>

        <div id="games" key="games">
          {games.length} results
          {/* {games.map(g => g.name)} */}
          {games.map(g => <h2 key={g.id + g.name} >{g.name} ({g.console})</h2>)}
        </div>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
